---
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../consts';

const blogPosts = (await getCollection('blog')).map(post => ({
	...post,
	data: {
		...post.data,
		type: 'blog',
	}
}));

const notes = (await getCollection('notes')).map(note => ({
	...note,
	data: {
		...note.data,
		type: 'note',
	}
}));

const allContent = [...blogPosts, ...notes].sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const renderedContent = await Promise.all(
  allContent.map(async (item) => {
    const { Content } = await item.render();
    return {
      item,
      Content,
    };
  })
);
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			main {
				width: 960px;
			}
			ul {
				display: flex;
				flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			li {
				width: 100%;
			}
			li * {
				text-decoration: none;
				transition: 0.2s ease;
			}
			.blog-post-link {
				display: flex;
				align-items: flex-start;
				gap: 1rem;
			}
			.blog-post-link:hover .blog-post-title,
			.blog-post-link:hover .date {
				color: rgb(var(--accent));
			}
			.description {
				color: rgb(var(--black));
			}
			.blog-post-link:hover img {
				box-shadow: var(--box-shadow);
			}
			.blog-post-image {
				border-radius: 12px;
				width: 360px;
				max-width: 100%;
			}
			.blog-post-text-content {
				flex-grow: 1;
			}
			.title {
				margin: 0;
				color: rgb(var(--black));
				line-height: 1;
			}
			.blog-post-title {
				font-size: 2.369rem;
			}
			.note-title {
				font-size: 1.5rem;
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
			}
			.note-content {
				margin-top: 0.5rem;
			}
			@media (max-width: 720px) {
				ul {
					gap: 0.5em;
				}
				.blog-post-title {
					font-size: 1.563em;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<section>
				<ul>
					{
						renderedContent.map(({ item, Content }) => (
							<li>
								{item.data.type === 'blog' ? (
									<a href={`/blog/${item.id}/`} class="blog-post-link">
										<div class="blog-post-text-content">
											<h2 class="title blog-post-title">{item.data.title}</h2>
											<p class="date">
												<FormattedDate date={item.data.pubDate} />
											</p>
											<p class="description">{item.data.description}</p>
										</div>
										{item.data.heroImage && (
											<Image class="blog-post-image" width={360} height={180} src={item.data.heroImage} alt="" />
										)}
									</a>
								) : (
									<div class="note">
										<h2 class="title note-title">{item.data.title}</h2>
										<p class="date">
											<FormattedDate date={item.data.pubDate} />
										</p>
										<div class="note-content">
											<Content />
										</div>
									</div>
								)}
							</li>
						))
					}
				</ul>
			</section>
		</main>
		<Footer />
	</body>
</html>